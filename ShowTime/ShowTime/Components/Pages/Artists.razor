@page "/artists"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@inject IArtistService ArtistService

<MudContainer>
    <MudText Typo="Typo.h4" Class="mb-4" Style="color: #6a1b9a; font-weight: 600;">Artists Page</MudText>
    
    @if (_artists.Count == 0)
    {
        <MudPaper Class="pa-4 text-center" Style="background-color: #f5f5f5;">
            <MudText>No artists found</MudText>
        </MudPaper>
    }
    else
    {
        <MudGrid Spacing="4" Justify="Justify.FlexStart"> 
            @foreach (var artist in _artists)
            {
                <MudItem xs="12" sm="6" md="4" lg="3" xl="2"> 
                    <MudCard Style="height: 100%; border-radius: 18px; overflow: hidden; position: relative;">
                        <div style="position: relative;">
                            <MudCardMedia Image="@artist.Image" Height="250" Style="object-fit: cover;"/>
                            <div style="position: absolute; top: 8px; right: 8px; display: flex; gap: 4px;">
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                                               Color="Color.Primary" 
                                               Variant="Variant.Filled"
                                               Size="Size.Small"
                                               Style="background-color: rgba(234,146,12,0.8);"/>
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                               Color="Color.Primary" 
                                               Variant="Variant.Filled"
                                               Size="Size.Small"
                                               Style="background-color: rgba(253,2,2,0.8);"
                                               @onclick="@(() => DeleteArtistAsync(artist.Id))"/>
                            </div>
                        </div>
                        <MudCardContent Style="background: linear-gradient(135deg, #41267a 0%, #1a1a2e 100%);">
                            <MudText Typo="Typo.h6" Style="color: white; margin-bottom: 8px;">@artist.Name</MudText>
                            <MudText Typo="Typo.body2" Style="color: #bdc3c7;">@artist.Genre</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    private IList<ArtistGetDto> _artists = new List<ArtistGetDto>();
    
    protected override async Task OnInitializedAsync()
    {
        _artists = await ArtistService.GetAllArtistsAsync();
    }

    private async Task DeleteArtistAsync(int id)
    {
        Console.WriteLine($"Artist with Id {id} deleted!");
        await ArtistService.DeleteArtistAsync(id);
        _artists = await ArtistService.GetAllArtistsAsync();
    }
    
}